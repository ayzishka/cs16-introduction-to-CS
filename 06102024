### Mobile App Development
Сегодня на паре мы прошли новую тему - Мобильные приложения — программы для смартфонов и планшетов, которые устанавливаются через App Store или Google Play. Они бывают нативными, веб-приложениями и кроссплатформенными. Примеры: соцсети, игры, утилиты, бизнес-приложения.
Нативные приложения создаются для конкретной платформы (iOS, Android), обеспечивая высокую производительность и доступ к функциям устройства. Веб-приложения работают через браузер и не требуют установки, 
но имеют ограниченный доступ к системным ресурсам. Кроссплатформенные приложения (React Native, Flutter) используют один код для обеих платформ, что сокращает время разработки.
iOS приложения создаются на Swift в Xcode, Android — на Kotlin или Java в Android Studio. Для кроссплатформенных приложений используются React Native (JavaScript) и Flutter (Dart).
Основные инструменты: Xcode, Android Studio, Visual Studio Code
Нативная разработка iOS использует Swift и архитектуру MVC. Пример — калькулятор. Android приложения разрабатываются на Kotlin с архитектурой MVVM. Пример — ToDo список.
React Native использует JavaScript для UI компонентов, позволяя разрабатывать для iOS и Android одновременно. Пример — приложение для задач. Flutter использует Dart и виджеты для интерфейса, 
с производительностью близкой к нативной. Пример — калькулятор.
UI/UX включает внешний вид приложения (UI) и взаимодействие пользователя с ним (UX). Принципы дизайна: простота, интуитивность, доступность. Инструменты: Figma, Adobe XD.
Приложения могут подключаться к API (REST, GraphQL), работать с JSON данными и использовать локальное хранение (SQLite, Core Data). Пример — получение данных о погоде через API.
Публикация приложений в App Store и Google Play включает регистрацию разработчика и загрузку приложения, соблюдение политики безопасности и стандартов платформ. Способы монетизации — реклама, встроенные покупки, подписки.
Для анализа приложений учитывается удобство использования, сильные стороны дизайна и предложения по улучшению UX.

